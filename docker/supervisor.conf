# Supervisor configuration for Google News Scraper production deployment
# Manages all application processes with automatic restart and monitoring

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700

[inet_http_server]
port=127.0.0.1:9001
username=admin
password=supervisor_admin_password  # Change this in production

[supervisord]
logfile=/app/logs/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=/tmp/supervisord.pid
nodaemon=true
user=app
minfds=1024
minprocs=200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

# FastAPI Web Application
[program:fastapi]
command=uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --workers 4
directory=/app
user=app
autostart=true
autorestart=true
startretries=3
startsecs=10
stopwaitsecs=30
stdout_logfile=/app/logs/fastapi.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stderr_logfile=/app/logs/fastapi.error.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
environment=PYTHONPATH="/app:/app/src:/app/newspaper4k-master"
priority=100

# Celery Worker
[program:celery-worker]
command=celery -A src.core.scheduler.celery_app worker --loglevel=info --concurrency=4 --max-tasks-per-child=1000 --queues=default,crawl
directory=/app
user=app
autostart=true
autorestart=true
startretries=3
startsecs=10
stopwaitsecs=60
killasgroup=true
stopasgroup=true
stdout_logfile=/app/logs/celery-worker.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stderr_logfile=/app/logs/celery-worker.error.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
environment=PYTHONPATH="/app:/app/src:/app/newspaper4k-master",C_FORCE_ROOT="1"
priority=200

# Celery Beat Scheduler
[program:celery-beat]
command=celery -A src.core.scheduler.celery_app beat --loglevel=info --pidfile=/tmp/celerybeat.pid
directory=/app
user=app
autostart=true
autorestart=true
startretries=3
startsecs=10
stopwaitsecs=30
stdout_logfile=/app/logs/celery-beat.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stderr_logfile=/app/logs/celery-beat.error.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
environment=PYTHONPATH="/app:/app/src:/app/newspaper4k-master",C_FORCE_ROOT="1"
priority=300

# Celery Flower Monitoring (Optional)
[program:celery-flower]
command=celery -A src.core.scheduler.celery_app flower --port=5555 --address=0.0.0.0
directory=/app
user=app
autostart=false
autorestart=true
startretries=3
startsecs=10
stopwaitsecs=30
stdout_logfile=/app/logs/celery-flower.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stderr_logfile=/app/logs/celery-flower.error.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
environment=PYTHONPATH="/app:/app/src:/app/newspaper4k-master",C_FORCE_ROOT="1"
priority=400

# Log aggregation and rotation
[program:logrotate]
command=/usr/sbin/logrotate -f /etc/logrotate.d/app
autostart=false
autorestart=false
startsecs=0
priority=500

# Process groups for easier management
[group:web]
programs=fastapi
priority=100

[group:celery]
programs=celery-worker,celery-beat
priority=200

[group:monitoring]
programs=celery-flower
priority=400

# Event listener for process monitoring
[eventlistener:crashmail]
command=/usr/local/bin/crashmail -a -m admin@company.com
events=PROCESS_STATE_EXITED
autostart=false
autorestart=false

# Memory monitor to restart processes if they use too much memory
[eventlistener:memmon]
command=memmon -a 400MB -m admin@company.com
events=TICK_60
autostart=false
autorestart=false