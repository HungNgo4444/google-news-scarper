# =============================================================================
# Google News Scraper - Environment Configuration Template
# =============================================================================
# Copy this file to .env and configure values for your environment
# For production, use specific environment files (.env.production, etc.)

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
ENVIRONMENT=development
LOG_LEVEL=INFO
API_HOST=0.0.0.0
API_PORT=8000

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================
# Development (Docker Compose)
DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/google_news

# Production example (replace with actual values)
# DATABASE_URL=postgresql+asyncpg://username:password@postgres:5432/google_news_prod

# Database Connection Pool Settings
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_TIMEOUT=30
DATABASE_ECHO=false

# PostgreSQL Container Configuration
POSTGRES_DB=google_news
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# PostgreSQL Performance Tuning (Production)
POSTGRES_MAX_CONNECTIONS=100
POSTGRES_SHARED_BUFFERS=256MB
POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
POSTGRES_MAINTENANCE_WORK_MEM=64MB
POSTGRES_WORK_MEM=4MB

# =============================================================================
# REDIS/CELERY CONFIGURATION
# =============================================================================
# Development (Docker Compose)
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Production with password (replace with actual values)
# CELERY_BROKER_URL=redis://:password@redis:6379/0
# CELERY_RESULT_BACKEND=redis://:password@redis:6379/0

# Celery Configuration
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=["json"]
CELERY_TIMEZONE=UTC
CELERY_ENABLE_UTC=true
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_TASK_TRACK_STARTED=true
CELERY_TASK_REJECT_ON_WORKER_LOST=true

# Redis Performance Settings
REDIS_MAX_MEMORY=400mb

# =============================================================================
# CRAWLER CONFIGURATION
# =============================================================================
# newspaper4k Extraction Settings
EXTRACTION_TIMEOUT=30
EXTRACTION_MAX_RETRIES=3
EXTRACTION_RETRY_BASE_DELAY=1.0
EXTRACTION_RETRY_MULTIPLIER=2.0

# newspaper4k Settings
NEWSPAPER_LANGUAGE=en
NEWSPAPER_KEEP_ARTICLE_HTML=true
NEWSPAPER_FETCH_IMAGES=true
NEWSPAPER_HTTP_SUCCESS_ONLY=true

# Job Processing Settings
JOB_EXECUTION_TIMEOUT=1800
MAX_CONCURRENT_JOBS=10
JOB_CLEANUP_DAYS=30

# =============================================================================
# CONTAINER ORCHESTRATION PATHS
# =============================================================================
# Volume mount paths (for production bind mounts)
POSTGRES_DATA_PATH=./data/postgres
REDIS_DATA_PATH=./data/redis
BEAT_DATA_PATH=./data/beat

# =============================================================================
# SSL/TLS CONFIGURATION (Production)
# =============================================================================
# SSL Certificate paths (mount these in production)
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem
SSL_CA_CERT_PATH=/etc/nginx/ssl/ca-cert.pem
SSL_DHPARAM_PATH=/etc/nginx/ssl/dhparam.pem

# =============================================================================
# SECRETS MANAGEMENT (Production)
# =============================================================================
# Paths to secret files (use Docker secrets in production)
POSTGRES_PASSWORD_FILE=./secrets/postgres_password.txt
REDIS_PASSWORD_FILE=./secrets/redis_password.txt

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
# Celery Flower Monitoring
FLOWER_USERNAME=admin
FLOWER_PASSWORD=change_this_password

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_START_PERIOD=40s

# =============================================================================
# DOCKER SPECIFIC CONFIGURATION
# =============================================================================
# Docker Compose overrides
COMPOSE_PROJECT_NAME=google-news-scraper
COMPOSE_FILE=docker-compose.yml

# Container resource limits (production)
WEB_CPU_LIMIT=1.0
WEB_MEMORY_LIMIT=512M
WEB_CPU_RESERVATION=0.5
WEB_MEMORY_RESERVATION=256M

WORKER_CPU_LIMIT=2.0
WORKER_MEMORY_LIMIT=1G
WORKER_CPU_RESERVATION=0.5
WORKER_MEMORY_RESERVATION=512M

POSTGRES_CPU_LIMIT=2.0
POSTGRES_MEMORY_LIMIT=2G
POSTGRES_CPU_RESERVATION=0.5
POSTGRES_MEMORY_RESERVATION=1G

REDIS_CPU_LIMIT=1.0
REDIS_MEMORY_LIMIT=512M
REDIS_CPU_RESERVATION=0.2
REDIS_MEMORY_RESERVATION=256M

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Development overrides (only for development environment)
DEV_RELOAD=true
DEV_DEBUG=true
DEV_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================
# Production security settings
PROD_ALLOWED_HOSTS=["your-domain.com", "www.your-domain.com"]
PROD_CORS_ORIGINS=["https://your-domain.com"]
PROD_SECURE_SSL_REDIRECT=true
PROD_SESSION_COOKIE_SECURE=true
PROD_CSRF_COOKIE_SECURE=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Structured logging settings
LOG_FORMAT=json
LOG_FILE_PATH=./logs/app.log
LOG_MAX_FILE_SIZE=50MB
LOG_BACKUP_COUNT=10
LOG_ROTATION_INTERVAL=daily

# Component-specific log levels
DATABASE_LOG_LEVEL=WARNING
CELERY_LOG_LEVEL=INFO
CRAWLER_LOG_LEVEL=INFO
API_LOG_LEVEL=INFO

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
# Backup settings for containers
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_POSTGRES_PATH=./data/postgres_backup
BACKUP_REDIS_PATH=./data/redis_backup

# =============================================================================
# ALERTING CONFIGURATION (Optional)
# =============================================================================
# Email alerts (production)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USE_TLS=true
SMTP_USERNAME=alerts@your-domain.com
SMTP_PASSWORD=your_email_password
ALERT_FROM_EMAIL=alerts@your-domain.com
ALERT_TO_EMAIL=admin@your-domain.com

# Webhook alerts
WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
WEBHOOK_ENABLED=false

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Uvicorn workers (production)
WEB_WORKERS=4
WEB_WORKER_CONNECTIONS=1000
WEB_WORKER_CLASS=uvicorn.workers.UvicornWorker

# Celery worker settings
CELERY_WORKER_CONCURRENCY=4
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000
CELERY_WORKER_DISABLE_RATE_LIMITS=false

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Optional features
ENABLE_API_DOCS=true
ENABLE_FLOWER_MONITORING=true
ENABLE_NGINX_PROXY=true
ENABLE_SSL_TERMINATION=false
ENABLE_LOG_AGGREGATION=false